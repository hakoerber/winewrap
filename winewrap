#!/usr/bin/env bash

_INFOFILE="info"
_WINEBIN="wine"
_PREFIXDIR="prefix"
_REQUIREMENTSFILE="requirements"
_WINETRICKSBIN="winetricks"
_WINEOPTIONS="explorer /desktop=d1,1920x1080"
_BINS=(
    "$_WINEBIN"
    "$_WINETRICKSBIN"
)

error() {
    printf '%s\n' "$*" >&2
}

info() {
    printf '%s\n' "$*"
}

usage() {
    cat >&2 <<EOF
usage: $0 <action> <game>
EOF
}

checkprog() {
    if ! command -v "$1" >/dev/null 2>&1; then
        error "\"$1\" not found in path"
        exit 1
    fi
}

if (( $# != 2 )) ; then
    usage
    exit 1
fi

if [[ -z "$WINEPATH" ]] ; then
    error "set WINEPATH to the location of your wine prefixes"
    exit 1
fi

set -o nounset

for bin in "${_BINS[@]}"; do
    checkprog "$bin"
done

wineprefix="$WINEPATH"/"$2"/"$_PREFIXDIR"
gameinfo="$WINEPATH"/"$2"/"$_INFOFILE"

if ! [[ -r "$gameinfo" ]] ; then
    error "info file ($gameinfo) not found"
    exit 1
fi
source $gameinfo

export WINEPREFIX="$wineprefix"
export WINEARCH="$_ARCH"
export WINEDLLOVERRIDES="$_DLL_OVERRIDES"

case "$1" in
    start)
        exe="$wineprefix"/"$_EXE"

        cd "$(dirname "$exe")"

        "$_WINEBIN" $_WINEOPTIONS "$exe"
        ;;
    setup)
        "$_WINEBIN" wineboot --init

        for requirement in "${_REQUIREMENTS[@]}"; do
            winetricks --unattended "$requirement"
        done
        ;;
    *)
        usage
        exit 1
        ;;
esac

